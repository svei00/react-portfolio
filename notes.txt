01. npx create-react-app react-portfolio --Install React App with create-react-app. In this case react-portfolio.
02. npm i @emailjs/browser --We'll use it to implement the contact form without installing a dedicated server.
03. npm i @fortawesome/free-brands-svg-icons --To install the fonts that we'll use in the project.
04. npm i @fortawesome/free-solid-svg-icons --To install the fonts that we'll use in the project/for navigation on the left side.
05. npm i @fortawesome/react-fontawesome --To use Font-awesome in react
06. npm i animate.css --CSS library to animate objects and fonts.
07. npm i gsap-trial --We use the trial version in order to do not use any account.
08. npm i loaders.css --A package for loader. We're using it to add a packman.
09. npm i react-leaflet --A package for using maps in our contact site.
10. npm i react-loaders --A complement/integration for loaders.css
11. npm i react-router-dom --Package to navigate throug three pages.
12. npm i sass --To write less CSS code
15. npm i --save-dev --save-exact prettier --Install prettier to format the code, remember the --save-dev is only for the developer
14. Load if not the project into vscode.
15. Add .prettierrc file wit the following configuration:
    "trailingComma": "es5",
    "tabWidth": 2,
    "semi": false,
    "singleQuote": false
16. Change the name of App.css to App.scss and change the import on App.js
17. Add assest folder.
18. For SEO (Meta data) use react-helmet.
    Install npm i react-helmet or via yarn: yarn add react-helmet
19. Deploy via Netlify with command line (CLI)
    a. Install Webpack via npm: npm i --save-dev webpack webpack-cli or via yarn yarn add webpack webpack-cli
    b. Create a file in root called webpack.config.js
    c. Install the following configuration.
        const path = require('path')
        const HtmlWebpackPlugin = require('html-webpack-plugin')
        const { CleanWebpackPlugin } = require("clean-webpack-plugin");
        const MiniCssExtractPlugin = require('mini-css-extract-plugin');
        const OptimizeCssAssetsPlugin = require("optimize-css-assets-webpack-plugin");
        const TerserPlugin = require("terser-webpack-plugin");
        const CssMinimizerPlugin = require('css-minimizer-webpack-plugin');

        module.exports = {
            entry: ['./index.js'],
            output: {
                filename: '[name].[contenthash].js',
                path: path.resolve(__dirname, "dist"),
                assetModuleFilename: 'assets/[hash][ext][query]'
            },
            plugins: [
                new MiniCssExtractPlugin({ filename: "[name].[hash].css" }),
                new CleanWebpackPlugin(),
                new HtmlWebpackPlugin({ template: './index.html' })
            ],
            module: {
                rules: [
                    {
                        test: /\.html$/,
                        use: ["html-loader"]
                    },
                    {
                        test: /\.css$/i,
                        use: [
                            {
                                loader: MiniCssExtractPlugin.loader,
                                options: {},
                            },
                            'css-loader',
                        ],
                    },
                    {
                        test: /\.(svg|png|jpg|gif)$/,
                        type: 'asset/resource'
                    }
                ],
            },
            optimization: {
                minimizer: [
                    new CssMinimizerPlugin(),
                    new TerserPlugin()
                ]
            },

        }
    d. Install dependecies:
       npm i --save-dev html-webpack-plugin clean-webpack-plugin mini-css-extract-plugin mini-css-extract-plugin  mini-css-extract-plugin terser-webpack-plugin css-minimizer-webpack-plugin css-loader html-loader
    e. Create a file in root called index.js and import all the javascript files
    f. Into index.js file import all the CSS files too.
    g. On package.json scripts write: 
       - "build-webpack": "webpack --mode production"
       - then in the terminal npm run build-webpack

// References
* https://www.youtube.com/watch?v=ESHaail1eGc&t=0s
* https://www.youtube.com/watch?v=I2TNlHVJ9KQ
* https://www.youtube.com/watch?v=YnHsgQkY6Z4
* https://www.youtube.com/watch?v=3yD6Mwx6i0Q&t=2s
* https://codesandbox.io/s/br6fy // Similar to Sloboba
* https://7zm9j.csb.app/works    // Similar as above
* https://rp2ms.csb.app/#/skills // Interesting one, but too simple
* https://madox2.github.io/react-tagcloud/ library 
* https://search.google.com/test/mobile-friendly // To test SEO
* https://www.youtube.com/watch?v=OGoPhwK_P_Q // Helmet SEO Meta data
* https://www.academia-x.com/products/herramientas-frontend/categories/2148185847/posts/2149982621
* https://webpack.js.org/plugins/css-minimizer-webpack-plugin/
* https://stackoverflow.com/questions/63414434/react-serve-s-build-the-term-serve-is-not-recognized-as-the-name-of-a-cmdlet
* https://stackoverflow.com/questions/56694075/react-app-showing-page-with-404-the-requested-path-could-not-be-found-when-usi
* https://stackoverflow.com/questions/55840294/how-to-fix-missing-dependency-warning-when-using-useeffect-react-hook // Disable exhaustive-deps
* https://www.youtube.com/watch?v=fQIerHqB71w // Star Rating